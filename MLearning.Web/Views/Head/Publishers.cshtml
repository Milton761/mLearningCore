
@{
    ViewBag.Title = "Publishers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Profesores</h2>

@(Html.Kendo().Grid<MLearning.Core.Entities.publisher_by_institution>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.id).HeaderTemplate("Id").Width(70);
        columns.Bound(c => c.fullname).HeaderTemplate("Nombre");//.Width(100);
        columns.Bound(c => c.email).HeaderTemplate("Email");//.Width(100);
        columns.Bound(c => c.country).HeaderTemplate("Pais");//.Width(100);
        columns.Command(command => { command.Edit().UpdateText("Guardar").CancelText("Atras").Text("."); command.Destroy(); }).Width(300).HeaderTemplate("Acciones");
        //columns.Template(c => { }).ClientTemplate(@Html.ActionLink("Administrar", "ManageCircle", new { circle_id = "#=id#" }).ToHtmlString()).Width(150);

    })
    .ToolBar(toolbar => toolbar.Create())
    .Pageable()
    .Sortable()
    .Scrollable()
    .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("Publisher"))
        //.HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)

        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(c => c.id);
            model.Field(c => c.id).Editable(false);
            model.Field(c => c.created_at).Editable(false);
            model.Field(c => c.updated_at).Editable(false);
        })
        .Create(update => update.Action("Publisher_Create", "Head"))
            .Read(read => read.Action("Publisher_read", "Head"/*, new { institutionId = ViewBag.InstitutionId}*/))
        .Update(update => update.Action("Publisher_Update", "Head"))
        .Destroy(update => update.Action("Publisher_Destroy", "Head"))
    )
)

