@model MLearning.Web.Models.AdminPublisherViewModel

@{
    ViewBag.Title = "ConsumerLOList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--
<h2>CircleList</h2>

<p>
    @Html.ActionLink("Create New Circle", "CreateCircle")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Circles.FirstOrDefault().name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Circles.FirstOrDefault().type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Circles.FirstOrDefault().owner_id)
        </th>
     
        <th></th>
    </tr>

    @foreach (var item in Model.Circles)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.owner_id)
            </td>
        
            <td>
                @Html.ActionLink("Manage", "ManageCircle", new { circle_id = item.id }) |  
                @Html.ActionLink("Edit", "EditCircle", new { circle_id = item.id }) |           
                @Html.ActionLink("Delete", "DeleteCircle", new { circle_id = item.id })
            </td>
        </tr>
    }

</table>
-->

@(Html.Kendo().Grid<Kendo.Mvc.Examples.Models.ProductViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.name);
        columns.Bound(p => c.type).Width(100);
        //columns.Bound(p => p.UnitsInStock).Width(100);
        //columns.Bound(p => p.Discontinued).Width(100);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(160);
    })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.PopUp))
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.ProductID))
        .Create(update => update.Action("EditingPopup_Create", "Publisher"))
        .Read(read => read.Action("EditingPopup_Read", "Grid"))
        .Update(update => update.Action("EditingPopup_Update", "Grid"))
        .Destroy(update => update.Action("EditingPopup_Destroy", "Grid"))
    )
)


<h2>LearningObjectList</h2>

<p>
    @Html.ActionLink("Create New LO", "CreateLO")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.LearningObjects.FirstOrDefault().title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LearningObjects.FirstOrDefault().type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LearningObjects.FirstOrDefault().description)
        </th>
 
        <th>
            @Html.DisplayNameFor(model => model.LearningObjects.FirstOrDefault().url_cover)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.LearningObjects.FirstOrDefault().url_background)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LearningObjects.FirstOrDefault().Publisher_id)
        </th>
      
        <th>
            @Html.DisplayNameFor(model => model.LearningObjects.FirstOrDefault().created_at)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LearningObjects.FirstOrDefault().updated_at)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.LearningObjects) { 
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.description)
        </td>
      
        <td>
            @Html.DisplayFor(modelItem => item.url_cover)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.url_background)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Publisher_id)
        </td>
       
        <td>
            @Html.DisplayFor(modelItem => item.created_at)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.updated_at)
        </td>
        <td>
            @Html.ActionLink("Edit", "EditLO", new { lo_id=item.id }) |          
            @Html.ActionLink("Delete", "DeleteLO", new { lo_id=item.id })
        </td>
    </tr>
}

</table>
