
@{
    ViewBag.Title = "Institutions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Instituciones Educativas</h2>

@(Html.Kendo().Grid<MLearning.Core.Entities.head_by_institution>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.id).HeaderTemplate("Id").Width(70);
        columns.Bound(c => c.institution_name).HeaderTemplate("Nombre");//.Width(100);
        columns.Bound(c => c.country).HeaderTemplate("Pais");//.Width(100);
        columns.Bound(c => c.city).HeaderTemplate("Ciudad");
        columns.Bound(c => c.fullname).HeaderTemplate("Director");
        columns.Command(command => { command.Edit().UpdateText("Guardar").CancelText("Atras").Text("."); command.Destroy(); }).Width(300).HeaderTemplate("Acciones");
        //columns.Template(c => { }).ClientTemplate(@Html.ActionLink("Administrar", "ManageCircle", new { circle_id = "#=id#" }).ToHtmlString()).Width(150);

    })
    .ToolBar(toolbar => toolbar.Create())
    .Pageable()
    .Sortable()
    .Scrollable()
    .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("Institution"))
    //.HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)

        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(c => c.id);
            model.Field(c => c.id).Editable(false);
            model.Field(c => c.created_at).Editable(false);
            model.Field(c => c.updated_at).Editable(false);
        })
        .Create(update => update.Action("Institution_Create", "Admin"))
        .Read(read => read.Action("Institution_read", "Admin"))
        .Update(update => update.Action("Institution_Update", "Admin"))
        .Destroy(update => update.Action("Institution_Destroy", "Admin"))
    )
)

<!--TODO move to its own view-->
@(Html.Kendo().MultiSelect()
          .Name("consumers")
          .DataTextField("fullname")
          .DataValueField("id")
          .Placeholder("Busque alumnos para agregar ...")
          .AutoBind(false)
          .Filter(FilterType.Contains)
          .DataSource(source =>
          {
              source.Custom()
             .ServerFiltering(true)
             .Type("aspnetmvc-ajax")
             .Transport(transport =>
             {
                 transport.Read("GetConsumers", "Admin");
             })
             
             .Schema(schema =>
             {
                 schema.Data("Data") 
                       .Total("Total");
             });
          })
)

<button class="k-button" id="get">Add consumers</button>

@(Html.Kendo().Grid<MLearningDB.consumer_by_circle>()
    .Name("consumersGrid")
    .Columns(columns =>
    {
        columns.Bound(c => c.id).HeaderTemplate("Id").Width(70);
        columns.Bound(c => c.fullname).HeaderTemplate("Nombre");//.Width(100);
        columns.Bound(c => c.email).HeaderTemplate("Email");//.Width(100);
        columns.Bound(c => c.username).HeaderTemplate("Usuario");
        columns.Command(command => { command.Destroy(); }).Width(100).HeaderTemplate("Acciones");

    })
        //.ToolBar(toolbar => toolbar.Create())
    .Pageable()
    .Sortable()
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)

        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(c => c.id);
            model.Field(c => c.id).Editable(false);
            model.Field(c => c.created_at).Editable(false);
            model.Field(c => c.updated_at).Editable(false);
        })
        .Read(read => read.Action("CircleConsumers_read", "Admin"))
            .Destroy(update => update.Action("CircleConsumer_destroy", "Admin"))
    )
)

    <script>
        $(document).ready(function () {
            var consumers = $("#consumers").data("kendoMultiSelect");
            //var optional = $("#optional").data("kendoMultiSelect");

            var postData = {
                ids : consumers.value(),
                circleId : @(ViewBag.circleId)
                };

            $("#get").click(function () {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("AddConsumers","Admin")",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(postData),
                    success: function (data) { //alert(data); 
                        $('#consumersGrid').data('kendoGrid').dataSource.read();
                        consumers.value(null);
                    },
                    failure: function (errMsg) {
                        alert(errMsg);
                    }
                });
            });
        });
    </script>


    <!--<script>
        $(function () {
            var t = $('#transfer-test').bootstrapTransfer(
                {
                    'target_id': 'multi-select-input',
                    'height': '15em',
                    'hilite_selection': true
                });

            t.populate([
                { value: "1", content: "Apple" },
                { value: "2", content: "Orange" },
                { value: "3", content: "Banana" },
                { value: "4", content: "Peach" },
                { value: "5", content: "Grapes" }
            ]);
            //t.set_values(["2", "4"]);
            //console.log(t.get_values());
        });
    </script>-->
