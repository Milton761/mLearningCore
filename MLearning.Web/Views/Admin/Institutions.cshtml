
@{
    ViewBag.Title = "Institutions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Instituciones Educativas</h2>

@(Html.Kendo().Grid<MLearning.Core.Entities.head_by_institution>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.id).HeaderTemplate("Id").Width(70);
        columns.Bound(c => c.institution_name).HeaderTemplate("Nombre");//.Width(100);
        columns.Bound(c => c.country).HeaderTemplate("Pais");//.Width(100);
        columns.Bound(c => c.city).HeaderTemplate("Ciudad");
        columns.Bound(c => c.fullname).HeaderTemplate("Director");
        //columns.Bound(c => c.)
        //columns.Bound(p => p.UnitsInStock).Width(100);
        //columns.Bound(p => p.Discontinued).Width(100);
        columns.Command(command => { command.Edit().UpdateText("Guardar").CancelText("Atras").Text("."); command.Destroy(); }).Width(300).HeaderTemplate("Acciones");
        //columns.Template(c => { }).ClientTemplate(@Html.ActionLink("Administrar", "ManageCircle", new { circle_id = "#=id#" }).ToHtmlString()).Width(150);

    })
    .ToolBar(toolbar => toolbar.Create())
    .Pageable()
    .Sortable()
    .Scrollable()
    .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("Institution"))
    //.HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)

        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(c => c.id);
            model.Field(c => c.id).Editable(false);
            model.Field(c => c.created_at).Editable(false);
            model.Field(c => c.updated_at).Editable(false);
        })
        .Create(update => update.Action("Institution_Create", "Admin"))
            .Read(read => read.Action("Institution_read", "Admin"))
                .Update(update => update.Action("Institution_Update", "Admin"))
                .Destroy(update => update.Action("Institution_Destroy", "Admin"))
    )
)


@(Html.Kendo().MultiSelect()
          .Name("consumers")
          .DataTextField("fullname")
          .DataValueField("id")
          .Placeholder("Busque alumnos para agregar ...")
          .AutoBind(false)
          .Value(new[] { new { fullname = "Chang", id = 2 }})
          .DataSource(source =>
          {
              source.Read(read =>
              {
                  read.Action("GetConsumers", "Admin");
              })
              .ServerFiltering(true);
          })
)

<div id="transfer-test" style="width:400px"></div>

    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
    </script>

<!--<script>
    $(function () {
        var t = $('#transfer-test').bootstrapTransfer(
            {
                'target_id': 'multi-select-input',
                'height': '15em',
                'hilite_selection': true
            });

        t.populate([
            { value: "1", content: "Apple" },
            { value: "2", content: "Orange" },
            { value: "3", content: "Banana" },
            { value: "4", content: "Peach" },
            { value: "5", content: "Grapes" }
        ]);
        //t.set_values(["2", "4"]);
        //console.log(t.get_values());
    });
</script>-->
