
@{
    ViewBag.Title = "Institutions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Institutions</h2>

@(Html.Kendo().Grid<MLearning.Core.Entities.head_by_institution>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.id).Width(100);
        columns.Bound(c => c.name);//.Width(100);
        columns.Bound(c => c.country);//.Width(100);
        columns.Bound(c => c.city);
        columns.Bound(c => c.fullname);
        //columns.Bound(c => c.)
        //columns.Bound(p => p.UnitsInStock).Width(100);
        //columns.Bound(p => p.Discontinued).Width(100);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(300);
        //columns.Template(c => { }).ClientTemplate(@Html.ActionLink("Administrar", "ManageCircle", new { circle_id = "#=id#" }).ToHtmlString()).Width(150);

    })
    .ToolBar(toolbar => toolbar.Create())
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)

        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(c => c.id);
            model.Field(c => c.id).Editable(false);
            model.Field(c => c.created_at).Editable(false);
            model.Field(c => c.updated_at).Editable(false);
        })
        .Create(update => update.Action("Institution_Create", "Admin"))
            .Read(read => read.Action("Institution_read", "Admin"))
                .Update(update => update.Action("Institution_Update", "Admin"))
                .Destroy(update => update.Action("Institution_Destroy", "Admin"))
    )
    .Editable(editable => editable.Mode(GridEditMode.PopUp))
)

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>